<h1>Tu Carrito</h1>
<ul>
    {{#each cart}}
    <li>
        <h3>{{this.name}}</h3>
        <p>Precio: ${{this.price}}</p>
        <p>Cantidad: {{this.quantity}}</p>
        <p>Total por este producto: ${{this.total}}</p>
        <button class="remove-item-btn" data-product-id="{{this.productId}}">Eliminar producto</button>
    </li>
    <hr>
    {{/each}}
</ul>

<h2>Total del carrito: ${{total}}</h2>

<div>
    <button id="clear-cart-btn">Vaciar Carrito</button>
</div>

<div>
   <button id="checkout-btn" data-cart='{{json cart}}'>Finalizar compra</button>
</div>

<div>
    <a href="/api/sessions/current">Volver a la tienda</a> <!-- Enlace a la página de productos -->
</div>

<!-- Script para manejar la eliminación de productos del carrito y vaciar el carrito -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Eliminar un producto del carrito
        document.querySelectorAll('.remove-item-btn').forEach(button => {
            button.addEventListener('click', async (e) => {
                const productId = e.target.getAttribute('data-product-id');
                console.log("Product ID:", productId);

                try {
                    const response = await fetch('/cart/remove', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productId }),
                    });

                    const result = await response.json();
                    if (response.ok) {
                        alert('Producto eliminado correctamente');
                        location.reload(); // Recargar la página para reflejar los cambios
                    } else {
                        alert(result.error || 'Error al eliminar el producto');
                    }
                } catch (error) {
                    console.error(error);
                }
            });
        });

        // Vaciar todo el carrito
        document.getElementById('clear-cart-btn').addEventListener('click', async () => {
            try {
                const response = await fetch('/cart/clear', {
                    method: 'DELETE',
                });

                const result = await response.json();
                if (response.ok) {
                    alert('Carrito vaciado correctamente');
                    location.reload(); // Recargar la página para reflejar los cambios
                } else {
                    alert(result.error || 'Error al vaciar el carrito');
                }
            } catch (error) {
                console.error(error);
            }
        });
    });

   document.getElementById('checkout-btn').addEventListener('click', async (event) => {
  try {
    const cart = JSON.parse(event.target.getAttribute('data-cart'));
   

    const response = await fetch('/api/sessions/ticket', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        cart: cart,
      }),
    });

    const result = await response.json();
    
    if (response.ok) {
      alert('Compra finalizada con éxito. Revisa tu correo para más detalles.');
      window.location.href = '/api/sessions/current';
    } else {
      alert(result.error || 'Error al finalizar la compra');
    }
  } catch (error) {
    console.error('Error al finalizar la compra:', error);
  }
});

</script>